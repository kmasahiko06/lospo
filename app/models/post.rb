class Post < ActiveRecord::Base

    validates :title, presence: {message: "を入力してください"}, length: {maximum: 50, message: "は50文字以内です"}

    validates :text, presence: {message: "を入力してください"}, length: {maximum: 50000, message: "は50000文字以内です"}

    validates :image, presence: {message: "を選択してください"}



    mount_uploader :image, ImageUploader

    enum bosyuu: {応援・観戦メンバー募集:1, チームメンバー募集:2, 試合相手募集:3}

    enum prefecture: { 北海道:1, 青森県:2, 岩手県:3, 宮城県:4, 秋田県:5, 山形県:6, 福島県:7, 茨城県:8, 栃木県:9, 群馬県:10, 埼玉県:11, 千葉県:12, 東京都:13, 神奈川県:14, 新潟県:15, 富山県:16,  石川県:17, 福井県:18, 山梨県:19, 長野県:20, 岐阜県:21, 静岡県:22, 愛知県:23, 三重県:24, 滋賀県:25, 京都府:26, 大阪府:27, 兵庫県:28, 奈良県:29, 和歌山県:30, 鳥取県:31, 島根県:32, 岡山県:33, 広島県:34, 山口県:35, 徳島県:36, 香川県:37, 愛媛県:38, 高知県:39, 福岡県:40, 佐賀県:41, 長崎県:42, 熊本県:43, 大分県:44, 宮崎県:45, 鹿児島県:46, 沖縄県:47}

    #今後追加することを考え番号を空ける
    enum spo_cate:{サッカー:0,
        フットサル:1,
        野球:2,
        テニス:3,
        卓球:4,
        ラグビー:10,
        アメリカンフットボール:11,
        バスケットボール:12,
        バレーボール:13,
        ソフトボール:14,
        ドッジボール:20,
        ゲートボール:21,
        ゴルフ:22,
        ボウリング:23,
        ホッケー:24,
        アイスホッケー:30,
        ラクロス:31,
        バドミントン:32,
        スカッシュ:33,
        ハンドボール:34,
        その他の球技:40,
        ウォーキング:41,
        ランニング:42,
        釣り:43,
        ダンス:44,
        ジムトレーニング:45,
        競馬:50,
        馬術:51,
        水泳:52,
        陸上競技:53,
        体操:54,
        スキー:60,
        スノーボード:61,
        フィギュアスケート:62,
        自転車スポーツ:63,
        射的スポーツ:64,
        パワースポーツ:65,
        柔道:70,
        ボクシング:71,
        ボクササイズなどのダイエット:72,
        レスリング:73,
        プロレス:74,
        総合格闘技:75,
        柔術:76,
        その他の格闘技・武道:80,
        オセロ:81,
        チェス:82,
        ポーカー:83,
        囲碁:84,
        将棋:85,
        麻雀:86,
        ウォータースポーツ:90,
        モータースポーツ:91,
        スカイスポーツ:92,
        アウトドアスポーツ:93,
        その他:100
    }

    # 募集形式による絞り込み
    scope :get_by_bosyuu, ->(bosyuu) {
    where(bosyuu: bosyuu)
    }

    # 都道府県による絞り込み
    scope :get_by_prefecture, ->(prefecture) {
    where(prefecture: prefecture)
    }

    # スポーツによる絞り込み
    scope :get_by_spo_cate, ->(spo_cate) {
    where(spo_cate: spo_cate)
    }


end
